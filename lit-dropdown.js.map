{"version":3,"file":"lit-dropdown.js","sourceRoot":"","sources":["src/lit-dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property, state, query} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {styleMap} from 'lit/directives/style-map.js';\n\n@customElement('lit-dropdown')\nexport class LitDropdown extends LitElement {\n  static override styles = css`\n    :host {\n      position: relative;\n      display: inline-flex;\n      flex-flow: column wrap;\n    }\n\n    .lit-dropdown-button {\n      border-style: var(--lit-dropdown-border-style, solid);\n      border-width: var(--lit-dropdown-border-width, 1px);\n      border-color: var(--lit-dropdown-border-color, black);\n      border-radius: var(--lit-dropdown-border-radius, 5px);\n      color: var(--lit-dropdown-color, black);\n      background-color: var(--lit-dropdown-background-color, white);\n      padding: var(--lit-dropdown-padding, 5px);\n      height: 2.5rem;\n      min-width: var(--lit-dropdown-min-width, 12rem);\n      cursor: pointer;\n    }\n\n    .lit-dropdown-button--blank {\n      appearance: none;\n      border-radius: 0;\n      text-align: inherit;\n      background: none;\n      box-shadow: none;\n      padding: 0;\n      cursor: pointer;\n      border: none;\n      color: inherit;\n      font: inherit;\n    }\n\n    .lit-dropdown-menu {\n      border-style: var(--lit-dropdown-border-style, solid);\n      border-width: var(--lit-dropdown-border-width, 1px);\n      border-color: var(--lit-dropdown-border-color, black);\n      border-radius: var(--lit-dropdown-border-radius, 5px);\n      background-color: var(--lit-dropdown-background-color, white);\n      display: block;\n      position: absolute;\n      inset: 0 auto auto 0;\n      margin: 0;\n      margin: 0;\n      padding: 0;\n      text-indent: 0;\n      list-style-type: none;\n      overflow: hidden;\n      visibility: hidden;\n    }\n\n    .lit-dropdown-item {\n      color: var(--lit-dropdown-color, black);\n    }\n\n    .lit-dropdown-item:hover {\n      background-color: var(--lit-dropdown-background-hover-color, lightgrey);\n    }\n\n    .lit-dropdown-item--active {\n      font-weight: bold;\n      color: var(--lit-dropdown-active-color, --lit-dropdown-color, black);\n      background-color: var(\n        --lit-dropdown-background-active-hover-color,\n        --lit-dropdown-background-hover-color,\n        lightgrey\n      );\n    }\n\n    .lit-dropdown-item a {\n      display: block;\n      padding: 0.3rem 0.75rem;\n      cursor: pointer;\n    }\n  `;\n\n  @property({type: Boolean})\n  right = false;\n\n  @property({type: String})\n  preselected?: string;\n\n  @property({type: String})\n  text?: string;\n\n  @property({type: Array})\n  values: string[] = [];\n\n  @state()\n  protected _activeValue?: string;\n\n  @state()\n  protected _isMenuOpen = false;\n\n  @query('#button')\n  private _buttonElement!: HTMLElement;\n\n  @query('#menu')\n  private _menuElement!: HTMLElement;\n\n  override connectedCallback() {\n    super.connectedCallback();\n    window.document.addEventListener('click', this._handleCloseMenu);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    window.document.removeEventListener('click', this._handleCloseMenu);\n  }\n\n  override firstUpdated() {\n    if (this.preselected !== undefined) {\n      this._activeValue = this.preselected;\n    }\n  }\n\n  override render() {\n    return html`\n      <section>${this._renderButton()} ${this._renderMenu()}</section>\n    `;\n  }\n\n  private _renderButton() {\n    return this.text === undefined\n      ? html`\n          <button\n            id=\"button\"\n            class=\"lit-dropdown-button--blank\"\n            @click=${this._handleButtonClick}\n          >\n            <slot></slot>\n          </button>\n        `\n      : html`\n          <button\n            id=\"button\"\n            class=\"lit-dropdown-button\"\n            @click=${this._handleButtonClick}\n          >\n            ${this.text}\n          </button>\n        `;\n  }\n\n  private _renderMenu() {\n    const menuOpenStateStyles = {\n      visibility: this._isMenuOpen ? 'visible' : 'hidden',\n      transform: `translate(${\n        this.right ? this._getButtonWidthDiffMenuWidth() : 0\n      }px, ${this._getButtonHeight()}px)`,\n    };\n    return html`\n      <ul\n        id=\"menu\"\n        class=\"lit-dropdown-menu\"\n        @click=${this._handleMenuItemClick}\n        style=${styleMap(menuOpenStateStyles)}\n      >\n        ${this.values.map(\n          (value) =>\n            html`\n              <li\n                class=\"lit-dropdown-item ${classMap({\n                  'lit-dropdown-item--active': value === this._activeValue,\n                })}\"\n              >\n                <a>${value}</a>\n              </li>\n            `\n        )}\n      </ul>\n    `;\n  }\n\n  private _toggleOpen() {\n    this._isMenuOpen = !this._isMenuOpen;\n  }\n\n  private _handleButtonClick = (e: Event) => {\n    this._toggleOpen();\n    e.stopPropagation();\n  };\n\n  private _handleMenuItemClick = (e: Event) => {\n    if ((e.target as HTMLElement).tagName.toUpperCase() === 'a'.toUpperCase()) {\n      const nextActiveValue = (e.target as HTMLElement).textContent!;\n      if (nextActiveValue !== this._activeValue) {\n        this._activeValue = nextActiveValue;\n        this._dispatchSelectEvent(nextActiveValue);\n      }\n      this._toggleOpen();\n      e.stopPropagation();\n    }\n  };\n\n  private _handleCloseMenu = () => {\n    if (this._isMenuOpen) {\n      this._toggleOpen();\n    }\n  };\n\n  private _dispatchSelectEvent(value: string) {\n    const selectEvent = new CustomEvent('item-select', {\n      detail: {value},\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(selectEvent);\n  }\n\n  private _getButtonHeight() {\n    return this._buttonElement?.getBoundingClientRect().height || 0;\n  }\n\n  private _getButtonWidthDiffMenuWidth() {\n    return (\n      this._buttonElement?.getBoundingClientRect().width -\n        this._menuElement?.offsetWidth || 0\n    );\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'lit-dropdown': LitDropdown;\n  }\n}\n"]}